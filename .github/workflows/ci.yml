name: CI
on:
  pull_request:
    branches: [develop, master]
  push:
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGET_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - name: Cache node mobules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node_cache_key-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_cache_key-

      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - run: npm ci #equivalent to npm build but for cicd
      - run: npm run format:check

      - run: npm test -- --coverage
        env:
          CI: true

      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage

      - name: Build project
        if: github.event_name == 'push'
        run: npm run build

      - name: Upload Build Folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build

      - name: Zip assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' # only push to master
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage

      - name: Create a Release # npm install --save-dev semantic-release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' # only push to master
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_TOKEN }} # use a custom token (isntead of github default token) here so that release.yml (release workflow) triggers

      - name: Deploy to Staging Env
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain peaceful-belief.surge.sh

      - name: Deploy to Master Env
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx surge --project ./build --domain my-production-url.surge.sh

      - name: Open issue #Open issue steps runs on failure
        if: failure() && github.event_name == 'pull_request'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.CUSTOM_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            "assignees": [
              "${{ github.event.pull_request.user.login }}"
            ]
            }'